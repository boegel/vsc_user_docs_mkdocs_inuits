{"config": {"indexing": "full", "lang": ["en"], "min_search_length": 3, "prebuild_index": false, "separator": "[\\s\\-]+"}, "docs": [{"location": "", "text": "Welcome to the VSC user documentation! # You want to learn more about: # HPC Linux", "title": "Home"}, {"location": "#welcome-to-the-vsc-user-documentation", "text": "", "title": "Welcome to the VSC user documentation!"}, {"location": "#you-want-to-learn-more-about", "text": "HPC Linux", "title": "You want to learn more about:"}, {"location": "about/", "text": "About the HPC .", "title": "About"}, {"location": "index_content/", "text": "You want to learn more about: # HPC Linux", "title": "You want to learn more about:"}, {"location": "index_content/#you-want-to-learn-more-about", "text": "HPC Linux", "title": "You want to learn more about:"}, {"location": "index_os/", "text": "Please select your operatingsystem: # Linux MacOS Windows", "title": "Please select your operatingsystem:"}, {"location": "index_os/#please-select-your-operatingsystem", "text": "Linux MacOS Windows", "title": "Please select your operatingsystem:"}, {"location": "intro-HPC/ch_FAQ/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Frequently Asked Questions {#ch:faq}", "title": "Frequently Asked Questions {#ch:faq}"}, {"location": "intro-HPC/ch_FAQ/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Frequently Asked Questions {#ch:faq}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_HOD/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Hanythingondemand (HOD) {#ch:hod}", "title": "Hanythingondemand (HOD) {#ch:hod}"}, {"location": "intro-HPC/ch_HOD/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Hanythingondemand (HOD) {#ch:hod}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_MATLAB/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # MATLAB {#ch:matlab}", "title": "MATLAB {#ch:matlab}"}, {"location": "intro-HPC/ch_MATLAB/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # MATLAB {#ch:matlab}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_VNC/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Graphical applications with VNC {#ch:vnc}", "title": "Graphical applications with VNC {#ch:vnc}"}, {"location": "intro-HPC/ch_VNC/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Graphical applications with VNC {#ch:vnc}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_account/", "text": "Getting an HPC Account # Getting ready to request an account # All users of Gent University Association (GUHA) can request an account on the UGent- HPC , which is part of the Flemish Supercomputing Centre (VSC). See HPC policies for more information on who is entitled to an account. The VSC, abbreviation of Flemish Supercomputer Centre, is a virtual supercomputer centre. It is a partnership between the five Flemish associations: the Association KU Leuven, Ghent University Association, Brussels University Association, Antwerp University Association and the University Colleges-Limburg. The VSC is funded by the Flemish Government. The UGent- HPC clusters use public/private key pairs for user authentication (rather than passwords). Technically, the private key is stored on your local computer and always stays there; the public key is stored on the UGent- HPC . Access to the UGent- HPC is granted to anyone who can prove to have access to the corresponding private key on his local computer. How do SSH keys work? # an SSH public/private key pair can be seen as a lock and a key the SSH public key is equivalent with a lock : you give it to the VSC and they put it on the door that gives access to your account. the SSH private key is like a physical key : you don't hand it out to other people. anyone who has the key (and the optional password) can unlock the door and log in to the account. the door to your VSC account is special: it can have multiple locks (SSH public keys) attached to it, and you only need to open one lock with the corresponding key (SSH private key) to open the door (log in to the account). Since all VSC clusters use Linux as their main operating system, you will need to get acquainted with using the command-line interface and using the terminal. To open a Terminal window in macOS, open the Finder and choose >> Applications > Utilities > Terminal Before requesting an account, you need to generate a pair of ssh keys. One popular way to do this on MacOS is using the OpenSSH client included with MacOS, which you can then also use to log on to the clusters. Test OpenSSH # Secure Shell (ssh) is a cryptographic network protocol for secure data communication, remote command-line login, remote command execution, and other secure network services between two networked computers. In short, ssh provides a secure connection between 2 computers via insecure channels (Network, Internet, telephone lines, ...). \"Secure\" means that: the User is authenticated to the System; and the System is authenticated to the User; and all data is encrypted during transfer. OpenSSH is a FREE implementation of the SSH connectivity protocol. MacOS comes with its own implementation of OpenSSH, so you don't need to install any third-party software to use it. Just open a terminal window and jump in! On all popular Linux distributions, the OpenSSH software is readily available, and most often installed by default. You can check whether the OpenSSH software is installed by opening a terminal and typing: $ ssh -V OpenSSH_7.4p1, OpenSSL 1.0.2k-fips 26 Jan 2017 To access the clusters and transfer your files, you will use the following commands: ssh-keygen: to generate the ssh keysgenerate a public ssh: to open a shell on a remote machine; sftp: a secure equivalent of ftp; scp: a secure equivalent of the remote copy command rcp. Generate a public/private key pair with OpenSSH # A key pair might already be present in the default location inside your home directory. Therefore, we first check if a key is available with the \"list short\" (\"ls\") command: $ ls ~/.ssh If a key-pair is already available, you would normally get: authorized_keys id_rsa id_rsa.pub known_hosts Otherwise, the command will show: ls: .ssh: No such file or directory You can recognise a public/private key pair when a pair of files has the same name except for the extension \".pub\" added to one of them. In this particular case, the private key is \"id_rsa\" and public key is \"id_rsa.pub\". You may have multiple keys (not necessarily in the directory \"\u223c/.ssh\") if you or your operating system requires this. Be aware that your existing key pair might be too short, or not the right type. You will need to generate a new key pair, when: you don't have a key pair yet you forgot the passphrase protecting your private key or your private key was compromised your key pair is too short or not the right type For extra security, the private key itself can be encrypted using a \"passphrase\", to prevent anyone from using your private key even when they manage to copy it. You have to \"unlock\" the private key by typing the passphrase. Be sure to never give away your private key, it is private and should stay private. You should not even copy it to one of your other machines, instead, you should create a new public/private key pair for each machine. $ ssh-keygen -t rsa -b 4096 Generating public/private rsa key pair. Enter file in which to save the key (/home/user/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/user/.ssh/id_rsa. Your public key has been saved in /home/user/.ssh/id_rsa.pub. This will ask you for a file name to store the private and public key, and a passphrase to protect your private key. It needs to be emphasised that you really should choose the passphrase wisely! The system will ask you for it every time you want to use the private key that is every time you want to access the cluster or transfer your files. Without your key pair, you won't be able to apply for a personal VSC account. Using an SSH agent (optional) # Most recent Unix derivatives include by default an SSH agent to keep and manage the user SSH keys. If you use one of these derivatives you must include the new keys into the SSH manager keyring to be able to connect to the HPC cluster . If not, SSH client will display an error message (see Connecting ) similar to this: Agent admitted failure to sign using the key. Permission denied (publickey,gssapi-keyex,gssapi-with-mic). This could be fixed using the ssh-add command. You can include the new private keys' identities in your keyring with: $ ssh-add Tip Without extra options ssh-add adds any key located at $HOME/.ssh directory, but you can specify the private key location path as argument, as example: ssh-add /path/to/my/id_rsa . Check that your key is available from the keyring with: $ ssh-add -l After these changes the key agent will keep your SSH key to connect to the clusters as usual. Tip You should execute ssh-add command again if you generate a new SSH key. Applying for the account # Visit https://account.vscentrum.be/ You will be redirected to our WAYF (Where Are You From) service where you have to select your \"Home Organisation\". Select \"Universiteit Gent\" in the dropdown box and optionally select \"Save my preference\" and \"permanently\". Click Confirm You will now be taken to the authentication page of your institute. You will now have to log in with CAS using your UGent account. You either have a login name of maximum 8 characters, or a (non-UGent) email address if you are an external user. In case of problems with your UGent password, please visit: https://password.ugent.be/ . After logging in, you may be requested to share your information. Click \"Yes, continue\". After you log in using your University of Gent login and password, you will be asked to upload the file that contains your public key, i.e., the file \"id_rsa.pub\" which you have generated earlier. Make sure that your public key is actually accepted for upload, beacuse if it is in a wrong format, wrong type or too short, then it will be refused. This file has been stored in the directory \" ~/.ssh/ \". Tip As \".ssh\" is an invisible directory, the Finder will not show it by default. The easiest way to access the folder, is by pressing Cmd + Shift + G , which will allow you to enter the name of a directory, which you would like to open in Finder. Here, type \"~/.ssh\" and press enter. After you have uploaded your public key you will receive an e-mail with a link to confirm your e-mail address. After confirming your e-mail address the VSC staff will review and if applicable approve your account. Welcome e-mail # Within one day, you should receive a Welcome e-mail with your VSC account details. Dear (Username), Your VSC-account has been approved by an administrator. Your vsc-username is vsc20167 Your account should be fully active within one hour. To check or update your account information please visit https://account.vscentrum.be/ For further info please visit https://www.vscentrum.be/user-portal Kind regards, -- The VSC administrators Now, you can start using the UGent- HPC . You can always look up your VSC id later by visiting https://account.vscentrum.be . Adding multiple SSH public keys (optional) # In case you are connecting from different computers to the login nodes, it is advised to use separate SSH public keys to do so. You should follow these steps. Create a new public/private SSH key pair from the new computer. Repeat the process described in section Generate a public/private key pair with OpenSSH . Go to https://account.vscentrum.be/django/account/edit Upload the new SSH public key using the Add public key section. Make sure that your public key is actually saved, because a public key will be refused if it is too short, wrong type, or in a wrong format. (optional) If you lost your key, you can delete the old key on the same page. You should keep at least one valid public SSH key in your account. Take into account that it will take some time before the new SSH public key is active in your account on the system; waiting for 15-30 minutes should be sufficient. Computation Workflow on the UGent- HPC # A typical Computation workflow will be: Connect to the UGent- HPC Transfer your files to the UGent- HPC Compile your code and test it Create a job script Submit your job Wait while your job gets into the queue your job gets executed your job finishes Move your results We'll take you through the different tasks one by one in the following chapters.", "title": "Getting an HPC Account"}, {"location": "intro-HPC/ch_account/#getting-an-hpc-account", "text": "", "title": "Getting an HPC Account"}, {"location": "intro-HPC/ch_account/#getting-ready-to-request-an-account", "text": "All users of Gent University Association (GUHA) can request an account on the UGent- HPC , which is part of the Flemish Supercomputing Centre (VSC). See HPC policies for more information on who is entitled to an account. The VSC, abbreviation of Flemish Supercomputer Centre, is a virtual supercomputer centre. It is a partnership between the five Flemish associations: the Association KU Leuven, Ghent University Association, Brussels University Association, Antwerp University Association and the University Colleges-Limburg. The VSC is funded by the Flemish Government. The UGent- HPC clusters use public/private key pairs for user authentication (rather than passwords). Technically, the private key is stored on your local computer and always stays there; the public key is stored on the UGent- HPC . Access to the UGent- HPC is granted to anyone who can prove to have access to the corresponding private key on his local computer.", "title": "Getting ready to request an account"}, {"location": "intro-HPC/ch_account/#how-do-ssh-keys-work", "text": "an SSH public/private key pair can be seen as a lock and a key the SSH public key is equivalent with a lock : you give it to the VSC and they put it on the door that gives access to your account. the SSH private key is like a physical key : you don't hand it out to other people. anyone who has the key (and the optional password) can unlock the door and log in to the account. the door to your VSC account is special: it can have multiple locks (SSH public keys) attached to it, and you only need to open one lock with the corresponding key (SSH private key) to open the door (log in to the account). Since all VSC clusters use Linux as their main operating system, you will need to get acquainted with using the command-line interface and using the terminal. To open a Terminal window in macOS, open the Finder and choose >> Applications > Utilities > Terminal Before requesting an account, you need to generate a pair of ssh keys. One popular way to do this on MacOS is using the OpenSSH client included with MacOS, which you can then also use to log on to the clusters.", "title": "How do SSH keys work?"}, {"location": "intro-HPC/ch_account/#test-openssh", "text": "Secure Shell (ssh) is a cryptographic network protocol for secure data communication, remote command-line login, remote command execution, and other secure network services between two networked computers. In short, ssh provides a secure connection between 2 computers via insecure channels (Network, Internet, telephone lines, ...). \"Secure\" means that: the User is authenticated to the System; and the System is authenticated to the User; and all data is encrypted during transfer. OpenSSH is a FREE implementation of the SSH connectivity protocol. MacOS comes with its own implementation of OpenSSH, so you don't need to install any third-party software to use it. Just open a terminal window and jump in! On all popular Linux distributions, the OpenSSH software is readily available, and most often installed by default. You can check whether the OpenSSH software is installed by opening a terminal and typing: $ ssh -V OpenSSH_7.4p1, OpenSSL 1.0.2k-fips 26 Jan 2017 To access the clusters and transfer your files, you will use the following commands: ssh-keygen: to generate the ssh keysgenerate a public ssh: to open a shell on a remote machine; sftp: a secure equivalent of ftp; scp: a secure equivalent of the remote copy command rcp.", "title": "Test OpenSSH"}, {"location": "intro-HPC/ch_account/#generate-a-publicprivate-key-pair-with-openssh", "text": "A key pair might already be present in the default location inside your home directory. Therefore, we first check if a key is available with the \"list short\" (\"ls\") command: $ ls ~/.ssh If a key-pair is already available, you would normally get: authorized_keys id_rsa id_rsa.pub known_hosts Otherwise, the command will show: ls: .ssh: No such file or directory You can recognise a public/private key pair when a pair of files has the same name except for the extension \".pub\" added to one of them. In this particular case, the private key is \"id_rsa\" and public key is \"id_rsa.pub\". You may have multiple keys (not necessarily in the directory \"\u223c/.ssh\") if you or your operating system requires this. Be aware that your existing key pair might be too short, or not the right type. You will need to generate a new key pair, when: you don't have a key pair yet you forgot the passphrase protecting your private key or your private key was compromised your key pair is too short or not the right type For extra security, the private key itself can be encrypted using a \"passphrase\", to prevent anyone from using your private key even when they manage to copy it. You have to \"unlock\" the private key by typing the passphrase. Be sure to never give away your private key, it is private and should stay private. You should not even copy it to one of your other machines, instead, you should create a new public/private key pair for each machine. $ ssh-keygen -t rsa -b 4096 Generating public/private rsa key pair. Enter file in which to save the key (/home/user/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/user/.ssh/id_rsa. Your public key has been saved in /home/user/.ssh/id_rsa.pub. This will ask you for a file name to store the private and public key, and a passphrase to protect your private key. It needs to be emphasised that you really should choose the passphrase wisely! The system will ask you for it every time you want to use the private key that is every time you want to access the cluster or transfer your files. Without your key pair, you won't be able to apply for a personal VSC account.", "title": "Generate a public/private key pair with OpenSSH"}, {"location": "intro-HPC/ch_account/#using-an-ssh-agent-optional", "text": "Most recent Unix derivatives include by default an SSH agent to keep and manage the user SSH keys. If you use one of these derivatives you must include the new keys into the SSH manager keyring to be able to connect to the HPC cluster . If not, SSH client will display an error message (see Connecting ) similar to this: Agent admitted failure to sign using the key. Permission denied (publickey,gssapi-keyex,gssapi-with-mic). This could be fixed using the ssh-add command. You can include the new private keys' identities in your keyring with: $ ssh-add Tip Without extra options ssh-add adds any key located at $HOME/.ssh directory, but you can specify the private key location path as argument, as example: ssh-add /path/to/my/id_rsa . Check that your key is available from the keyring with: $ ssh-add -l After these changes the key agent will keep your SSH key to connect to the clusters as usual. Tip You should execute ssh-add command again if you generate a new SSH key.", "title": "Using an SSH agent (optional)"}, {"location": "intro-HPC/ch_account/#applying-for-the-account", "text": "Visit https://account.vscentrum.be/ You will be redirected to our WAYF (Where Are You From) service where you have to select your \"Home Organisation\". Select \"Universiteit Gent\" in the dropdown box and optionally select \"Save my preference\" and \"permanently\". Click Confirm You will now be taken to the authentication page of your institute. You will now have to log in with CAS using your UGent account. You either have a login name of maximum 8 characters, or a (non-UGent) email address if you are an external user. In case of problems with your UGent password, please visit: https://password.ugent.be/ . After logging in, you may be requested to share your information. Click \"Yes, continue\". After you log in using your University of Gent login and password, you will be asked to upload the file that contains your public key, i.e., the file \"id_rsa.pub\" which you have generated earlier. Make sure that your public key is actually accepted for upload, beacuse if it is in a wrong format, wrong type or too short, then it will be refused. This file has been stored in the directory \" ~/.ssh/ \". Tip As \".ssh\" is an invisible directory, the Finder will not show it by default. The easiest way to access the folder, is by pressing Cmd + Shift + G , which will allow you to enter the name of a directory, which you would like to open in Finder. Here, type \"~/.ssh\" and press enter. After you have uploaded your public key you will receive an e-mail with a link to confirm your e-mail address. After confirming your e-mail address the VSC staff will review and if applicable approve your account.", "title": "Applying for the account"}, {"location": "intro-HPC/ch_account/#welcome-e-mail", "text": "Within one day, you should receive a Welcome e-mail with your VSC account details. Dear (Username), Your VSC-account has been approved by an administrator. Your vsc-username is vsc20167 Your account should be fully active within one hour. To check or update your account information please visit https://account.vscentrum.be/ For further info please visit https://www.vscentrum.be/user-portal Kind regards, -- The VSC administrators Now, you can start using the UGent- HPC . You can always look up your VSC id later by visiting https://account.vscentrum.be .", "title": "Welcome e-mail"}, {"location": "intro-HPC/ch_account/#adding-multiple-ssh-public-keys-optional", "text": "In case you are connecting from different computers to the login nodes, it is advised to use separate SSH public keys to do so. You should follow these steps. Create a new public/private SSH key pair from the new computer. Repeat the process described in section Generate a public/private key pair with OpenSSH . Go to https://account.vscentrum.be/django/account/edit Upload the new SSH public key using the Add public key section. Make sure that your public key is actually saved, because a public key will be refused if it is too short, wrong type, or in a wrong format. (optional) If you lost your key, you can delete the old key on the same page. You should keep at least one valid public SSH key in your account. Take into account that it will take some time before the new SSH public key is active in your account on the system; waiting for 15-30 minutes should be sufficient.", "title": "Adding multiple SSH public keys (optional)"}, {"location": "intro-HPC/ch_account/#computation-workflow-on-the-ugent-hpc", "text": "A typical Computation workflow will be: Connect to the UGent- HPC Transfer your files to the UGent- HPC Compile your code and test it Create a job script Submit your job Wait while your job gets into the queue your job gets executed your job finishes Move your results We'll take you through the different tasks one by one in the following chapters.", "title": "Computation Workflow on the UGent-HPC"}, {"location": "intro-HPC/ch_best_practices/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Best Practices {#ch:best-practices}", "title": "Best Practices {#ch:best-practices}"}, {"location": "intro-HPC/ch_best_practices/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Best Practices {#ch:best-practices}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_checkpointing/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Checkpointing {#ch:checkpointing}", "title": "Checkpointing {#ch:checkpointing}"}, {"location": "intro-HPC/ch_checkpointing/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Checkpointing {#ch:checkpointing}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_compiling_your_software/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Compiling and testing your software on the HPC {#ch:compiling-and-testing-your-software-on-the-hpc}", "title": "Compiling and testing your software on the HPC {#ch:compiling-and-testing-your-software-on-the-hpc}"}, {"location": "intro-HPC/ch_compiling_your_software/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Compiling and testing your software on the HPC {#ch:compiling-and-testing-your-software-on-the-hpc}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_connecting/", "text": "Connecting to the HPC infrastructure # Before you can really start using the UGent- HPC clusters, there are several things you need to do or know: You need to log on to the cluster using an SSH client to one of the login nodes. This will give you command-line access. The software you'll need to use on your client system depends on its operating system. Before you can do some work, you'll have to transfer the files that you need from your desktop computer to the cluster . At the end of a job, you might want to transfer some files back. Optionally, if you wish to use programs with a graphical user interface , you will need an X-server on your client system and log in to the login nodes with X-forwarding enabled. Often several versions of software packages and libraries are installed, so you need to select the ones you need. To manage different versions efficiently, the VSC clusters use so-called modules , so you will need to select and load the modules that you need. Connection restrictions # Since March 20th 2020, restrictions are in place that limit from where you can connect to the VSC HPC infrastructure, in response to security incidents involving several European HPC centres. VSC login nodes are only directly accessible from within university networks, and from (most) Belgian commercial internet providers. All other IP domains are blocked by default. If you are connecting from an IP address that is not allowed direct access, you have the following options to get access to VSC login nodes: Use an VPN connection to connect to University of Gent the network (recommended). See https://helpdesk.ugent.be/vpn/en/ for more information. Register your IP address by accessing https://firewall.hpc.kuleuven.be (same URL regardless of the university your affiliated with) and log in with your University of Gent account. While this web connection is active new SSH sessions can be started. Active SSH sessions will remain active even when this web page is closed. Contact your HPC support team (via hpc@ugent.be) and ask them to whitelist your IP range (e.g., for industry access, automated processes). Trying to establish an SSH connection from an IP address that does not adhere to these restrictions will result in an immediate failure to connect, with an error message like: ssh_exchange_identification: read: Connection reset by peer First Time connection to the HPC infrastructure # If you have any issues connecting to the UGent- HPC after you've followed these steps, see Issues connecting to login node to troubleshoot. Connect # Open up a terminal and enter the following command to connect to the UGent- HPC . You can open a terminal by navigation to Applications and then Utilities in the finder and open Terminal.app, or enter Terminal in Spotlight Search. $ ssh vsc20167@login.hpc.ugent.be Here, user vsc20167 wants to make a connection to the \"Leibniz\" cluster at University of Gent via the login node \"login.hpc.ugent.be\", so replace vsc20167 with your own VSC id in the above command. The first time you make a connection to the login node, you will be asked to verify the authenticity of the login node. Please check section Warning message when first connecting to new host -first-connecting-to-new-host) on how to do this. A possible error message you can get if you previously saved your private key somewhere else than the default location ( $HOME/.ssh/id_rsa ): Permission denied (publickey,gssapi-keyex,gssapi-with-mic). In this case, use the -i option for the ssh command to specify the location of your private key. For example: $ ssh -i /home/example/my_keys Congratulations, you're on the UGent- HPC infrastructure now! To find out where you have landed you can print the current working directory: $ pwd /user/gent/201/vsc20167 Your new private home directory is \"/user/gent/201/vsc20167\". Here you can create your own subdirectory structure, copy and prepare your applications, compile and test them and submit your jobs on the UGent- HPC . $ cd /apps/gent/tutorials $ ls Intro-HPC/ This directory currently contains all training material for the Introduction to the UGent- HPC . More relevant training material to work with the UGent- HPC can always be added later in this directory. You can now explore the content of this directory with the \"ls --l\" ( l ist s l ong) and the \"cd\" ( c hange irectory) commands: As we are interested in the use of the HPC , move further to Intro- HPC and explore the contents up to 2 levels deep: $ cd Intro-HPC $ tree -L 2 . '-- examples |-- Compiling-and-testing-your-software-on-the-HPC |-- Fine-tuning-Job-Specifications |-- Multi-core-jobs-Parallel-Computing |-- Multi-job-submission |-- Program-examples |-- Running-batch-jobs |-- Running-jobs-with-input |-- Running-jobs-with-input-output-data |-- example.pbs '-- example.sh 9 directories, 5 files This directory contains: This HPC Tutorial (in either a Mac, Linux or Windows version). An examples subdirectory, containing all the examples that you need in this Tutorial, as well as examples that might be useful for your specific applications. $ cd examples Tip Typing cd ex followed by Tab (the Tab-key) will generate the cd examples command. Command-line completionn (also tab completion) is a common feature of the bash command line interpreter, in which the program automatically fills in partially typed commands. Tip For more exhaustive tutorials about Linux usage, see Appendix Useful Linux Commands The first action is to copy the contents of the UGent- HPC examples directory to your home directory, so that you have your own personal copy and that you can start using the examples. The \"-r\" option of the copy command will also copy the contents of the sub-directories \" recursively \". $ cp --r /apps/gent/tutorials/Intro-HPC/examples ~/ Go to your home directory, check your own private examples directory, ... and start working. $ cd $ ls -l Upon connecting you will see a login message containing your last login time stamp and a basic overview of the current cluster utilisation. Last login: Thu Mar 18 13:15:09 2021 from gligarha02.gastly.os STEVIN HPC-UGent infrastructure status on Thu, 18 Mar 2021 13:30:01 cluster - full - free - part - total - running - queued nodes nodes free nodes jobs jobs ------------------------------------------------------------------- swalot 9 0 104 126 N/A N/A skitty 53 0 16 72 N/A N/A victini 40 0 54 96 N/A N/A joltik 8 0 2 10 N/A N/A kirlia 12 0 4 16 N/A N/A doduo 115 0 0 128 N/A N/A For a full view of the current loads and queues see: https://hpc.ugent.be/clusterstate/ Updates on current system status and planned maintenance can be found on https://www.ugent.be/hpc/en/infrastructure/status You can exit the connection at anytime by entering: $ exit logout Connection to login.hpc.ugent.be closed. tip: Setting your Language right You may encounter a warning message similar to the following one during connecting: perl: warning: Setting locale failed. perl: warning: Please check that your locale settings: LANGUAGE = (unset), LC_ALL = (unset), LC_CTYPE = \"UTF-8\", LANG = (unset) are supported and installed on your system. perl: warning: Falling back to the standard locale (\"C\"). or any other error message complaining about the locale. This means that the correct \"locale\" has not yet been properly specified on your local machine. Try: LANG= LC_COLLATE=\"C\" LC_CTYPE=\"UTF-8\" LC_MESSAGES=\"C\" LC_MONETARY=\"C\" LC_NUMERIC=\"C\" LC_TIME=\"C\" LC_ALL= A locale is a set of parameters that defines the user's language, country and any special variant preferences that the user wants to see in their user interface. Usually a locale identifier consists of at least a language identifier and a region identifier. Note: If you try to set a non-supported locale, then it will be automatically set to the default. Currently the default is en_US.UFT-8 or en_US , depending on whether your originally (non-supported) locale was UTF-8 or not. Open the .bashrc on your local machine with your favourite editor and add the following lines: $ nano ~/.bashrc ... export LANGUAGE=\"en_US.UTF-8\" export LC_ALL=\"en_US.UTF-8\" export LC_CTYPE=\"en_US.UTF-8\" export LANG=\"en_US.UTF-8\" ... tip: vi To start entering text in vi: move to the place you want to start entering text with the arrow keys and type \"i\" to switch to insert mode. You can easily exit vi by entering: \" ESC :wq\" To exit vi without saving your changes, enter \" ESC :q!\" or alternatively (if you are not comfortable with the Linux editors), again on your local machine: $ echo \"export LANGUAGE=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile $ echo \"export LC_ALL=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile $ echo \"export LC_CTYPE=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile $ echo \"export LANG=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile You can now log out, open a new terminal/shell on your local machine and reconnect to the , and you should not get these warnings anymore. Transfer Files to/from the UGent- HPC # Before you can do some work, you'll have to transfer the files you need from your desktop or department to the cluster . At the end of a job, you might want to transfer some files back. The preferred way to transfer files is by using an scp or sftp via the secure OpenSSH protocol. MacOS ships with an implementation of OpenSSH, so you don't need to install any third-party software to use it. Just open a terminal window and jump in! Using scp # Secure copy or SCP is a tool (command) for securely transferring files between a local host (= your computer) and a remote host (the UGent- HPC ). It is based on the Secure Shell (SSH) protocol. The scp command is the equivalent of the cp (i.e., c o p y) command, but can copy files to or from remote machines. It's easier to copy files directly to $VSC_DATA and $VSC_SCRATCH if you have symlinks to them in your home directory. See the chapter titled \"Uploading/downloading/editing files\", section \"Symlinks for data/scratch\" in the intro to Linux for how to do this. Open an additional terminal window and check that you're working on your local machine. $ hostname <local-machine-name> If you're still using the terminal that is connected to the UGent- HPC , close the connection by typing \"exit\" in the terminal window. For example, we will copy the (local) file \" localfile.txt \" to your home directory on the UGent- HPC cluster . We first generate a small dummy \" localfile.txt \", which contains the word \"Hello\". Use your own VSC account, which is something like \"vsc20167\". Don't forget the colon ( : ) at the end: if you forget it, it will just create a file named vsc20167@login.hpc.ugent.be on your local filesystem. You can even specify where to save the file on the remote filesystem by putting a path after the colon. $ echo \"Hello\" > localfile.txt $ ls -l ... -rw-r--r-- 1 user staff 6 Sep 18 09:37 localfile.txt $ scp localfile.txt vsc20167@login.hpc.ugent.be localfile.txt 100% 6 0.0KB/s 00:00 Connect to the UGent- HPC via another terminal, print the working directory (to make sure you're in the home directory) and check whether the file has arrived: $ pwd /user/gent/201/vsc20167 $ ls -l total 1536 drwxrwxr-x 2 drwxrwxr-x 2 drwxrwxr-x 10 -rw-r--r-- 1 $ cat localfile.txt Hello The scp command can also be used to copy files from the cluster to your local machine. Let us copy the remote file \"intro- HPC -MacOS-Gent.pdf\" from your \"docs\" subdirectory on the cluster to your local computer. First, we will confirm that the file is indeed in the \"docs\" subdirectory. On the terminal on the , enter: $ cd ~/docs $ ls -l total 1536 -rw-r--r-- 1 vsc20167 Sep 11 09:53 intro-HPC-MacOS-Gent.pdf Now we will copy the file to the local machine. On the terminal on your own local computer, enter: $ scp vsc20167@login.hpc.ugent.be:./docs/intro-HPC-MacOS-Gent.pdf . intro-HPC-MacOS-Gent.pdf 100% 725KB 724.6KB/s 00:01 $ ls -l total 899 -rw-r--r-- 1 user staff 741995 Sep 18 09:53 -rw-r--r-- 1 user staff 6 Sep 18 09:37 localfile.txt The file has been copied from the HPC to your local computer. It's also possible to copy entire directories (and their contents) with the -r flag. For example, if we want to copy the local directory dataset to $VSC_SCRATCH , we can use the following command (assuming you've created the scratch symlink): $ scp -r dataset vsc20167@login.hpc.ugent.be:scratch If you don't use the -r option to copy a directory, you will run into the following error: $ scp -r dataset vsc20167@login.hpc.ugent.be:scratch dataset: not a regular file Using sftp # The SSH File Transfer Protocol (also Secure File Transfer Protocol , or SFTP ) is a network protocol that provides file access, file transfer and file management functionalities over any reliable data stream. It was designed as an extension of the Secure Shell protocol (SSH) version 2.0. This protocol assumes that it is run over a secure channel, such as SSH, that the server has already authenticated the client, and that the identity of the client user is available to the protocol. The sftp is an equivalent of the ftp command, with the difference that it uses the secure ssh protocol to connect to the clusters. One easy way of starting a sftp session is $ sftp vsc20167@login.hpc.ugent.be Typical and popular commands inside an sftp session are: cd ~/exmples/fibo Move to the examples/fibo subdirectory on the (i.e., the UGent- HPC remote machine) ls Get a list of the files in the current directory on the UGent- HPC . get fibo.py Copy the file \"fibo.py\" from the UGent- HPC get tutorial/ HPC .pdf Copy the file \" HPC .pdf\" from the UGent- HPC , which is in the \"tutorial\" subdirectory. lcd test Move to the \"test\" subdirectory on your local machine. lcd .. Move up one level in the local directory. lls Get local directory listing. put test.py Copy the local file test.py to the UGent- HPC . put test1.py test2.py Copy the local file test1.py to the and rename it to test2.py. bye Quit the sftp session mget *.cc Copy all the remote files with extension \".cc\" to the local directory. mput *.h Copy all the local files with extension \".h\" to the UGent- HPC . Fast file transfer for large datasets # See the section on rsync in chapter 5 of the Linux intro manual .", "title": "Connecting to the HPC infrastructure"}, {"location": "intro-HPC/ch_connecting/#connecting-to-the-hpc-infrastructure", "text": "Before you can really start using the UGent- HPC clusters, there are several things you need to do or know: You need to log on to the cluster using an SSH client to one of the login nodes. This will give you command-line access. The software you'll need to use on your client system depends on its operating system. Before you can do some work, you'll have to transfer the files that you need from your desktop computer to the cluster . At the end of a job, you might want to transfer some files back. Optionally, if you wish to use programs with a graphical user interface , you will need an X-server on your client system and log in to the login nodes with X-forwarding enabled. Often several versions of software packages and libraries are installed, so you need to select the ones you need. To manage different versions efficiently, the VSC clusters use so-called modules , so you will need to select and load the modules that you need.", "title": "Connecting to the HPC infrastructure"}, {"location": "intro-HPC/ch_connecting/#connection-restrictions", "text": "Since March 20th 2020, restrictions are in place that limit from where you can connect to the VSC HPC infrastructure, in response to security incidents involving several European HPC centres. VSC login nodes are only directly accessible from within university networks, and from (most) Belgian commercial internet providers. All other IP domains are blocked by default. If you are connecting from an IP address that is not allowed direct access, you have the following options to get access to VSC login nodes: Use an VPN connection to connect to University of Gent the network (recommended). See https://helpdesk.ugent.be/vpn/en/ for more information. Register your IP address by accessing https://firewall.hpc.kuleuven.be (same URL regardless of the university your affiliated with) and log in with your University of Gent account. While this web connection is active new SSH sessions can be started. Active SSH sessions will remain active even when this web page is closed. Contact your HPC support team (via hpc@ugent.be) and ask them to whitelist your IP range (e.g., for industry access, automated processes). Trying to establish an SSH connection from an IP address that does not adhere to these restrictions will result in an immediate failure to connect, with an error message like: ssh_exchange_identification: read: Connection reset by peer", "title": "Connection restrictions"}, {"location": "intro-HPC/ch_connecting/#first-time-connection-to-the-hpc-infrastructure", "text": "If you have any issues connecting to the UGent- HPC after you've followed these steps, see Issues connecting to login node to troubleshoot.", "title": "First Time connection to the HPC infrastructure"}, {"location": "intro-HPC/ch_connecting/#connect", "text": "Open up a terminal and enter the following command to connect to the UGent- HPC . You can open a terminal by navigation to Applications and then Utilities in the finder and open Terminal.app, or enter Terminal in Spotlight Search. $ ssh vsc20167@login.hpc.ugent.be Here, user vsc20167 wants to make a connection to the \"Leibniz\" cluster at University of Gent via the login node \"login.hpc.ugent.be\", so replace vsc20167 with your own VSC id in the above command. The first time you make a connection to the login node, you will be asked to verify the authenticity of the login node. Please check section Warning message when first connecting to new host -first-connecting-to-new-host) on how to do this. A possible error message you can get if you previously saved your private key somewhere else than the default location ( $HOME/.ssh/id_rsa ): Permission denied (publickey,gssapi-keyex,gssapi-with-mic). In this case, use the -i option for the ssh command to specify the location of your private key. For example: $ ssh -i /home/example/my_keys Congratulations, you're on the UGent- HPC infrastructure now! To find out where you have landed you can print the current working directory: $ pwd /user/gent/201/vsc20167 Your new private home directory is \"/user/gent/201/vsc20167\". Here you can create your own subdirectory structure, copy and prepare your applications, compile and test them and submit your jobs on the UGent- HPC . $ cd /apps/gent/tutorials $ ls Intro-HPC/ This directory currently contains all training material for the Introduction to the UGent- HPC . More relevant training material to work with the UGent- HPC can always be added later in this directory. You can now explore the content of this directory with the \"ls --l\" ( l ist s l ong) and the \"cd\" ( c hange irectory) commands: As we are interested in the use of the HPC , move further to Intro- HPC and explore the contents up to 2 levels deep: $ cd Intro-HPC $ tree -L 2 . '-- examples |-- Compiling-and-testing-your-software-on-the-HPC |-- Fine-tuning-Job-Specifications |-- Multi-core-jobs-Parallel-Computing |-- Multi-job-submission |-- Program-examples |-- Running-batch-jobs |-- Running-jobs-with-input |-- Running-jobs-with-input-output-data |-- example.pbs '-- example.sh 9 directories, 5 files This directory contains: This HPC Tutorial (in either a Mac, Linux or Windows version). An examples subdirectory, containing all the examples that you need in this Tutorial, as well as examples that might be useful for your specific applications. $ cd examples Tip Typing cd ex followed by Tab (the Tab-key) will generate the cd examples command. Command-line completionn (also tab completion) is a common feature of the bash command line interpreter, in which the program automatically fills in partially typed commands. Tip For more exhaustive tutorials about Linux usage, see Appendix Useful Linux Commands The first action is to copy the contents of the UGent- HPC examples directory to your home directory, so that you have your own personal copy and that you can start using the examples. The \"-r\" option of the copy command will also copy the contents of the sub-directories \" recursively \". $ cp --r /apps/gent/tutorials/Intro-HPC/examples ~/ Go to your home directory, check your own private examples directory, ... and start working. $ cd $ ls -l Upon connecting you will see a login message containing your last login time stamp and a basic overview of the current cluster utilisation. Last login: Thu Mar 18 13:15:09 2021 from gligarha02.gastly.os STEVIN HPC-UGent infrastructure status on Thu, 18 Mar 2021 13:30:01 cluster - full - free - part - total - running - queued nodes nodes free nodes jobs jobs ------------------------------------------------------------------- swalot 9 0 104 126 N/A N/A skitty 53 0 16 72 N/A N/A victini 40 0 54 96 N/A N/A joltik 8 0 2 10 N/A N/A kirlia 12 0 4 16 N/A N/A doduo 115 0 0 128 N/A N/A For a full view of the current loads and queues see: https://hpc.ugent.be/clusterstate/ Updates on current system status and planned maintenance can be found on https://www.ugent.be/hpc/en/infrastructure/status You can exit the connection at anytime by entering: $ exit logout Connection to login.hpc.ugent.be closed. tip: Setting your Language right You may encounter a warning message similar to the following one during connecting: perl: warning: Setting locale failed. perl: warning: Please check that your locale settings: LANGUAGE = (unset), LC_ALL = (unset), LC_CTYPE = \"UTF-8\", LANG = (unset) are supported and installed on your system. perl: warning: Falling back to the standard locale (\"C\"). or any other error message complaining about the locale. This means that the correct \"locale\" has not yet been properly specified on your local machine. Try: LANG= LC_COLLATE=\"C\" LC_CTYPE=\"UTF-8\" LC_MESSAGES=\"C\" LC_MONETARY=\"C\" LC_NUMERIC=\"C\" LC_TIME=\"C\" LC_ALL= A locale is a set of parameters that defines the user's language, country and any special variant preferences that the user wants to see in their user interface. Usually a locale identifier consists of at least a language identifier and a region identifier. Note: If you try to set a non-supported locale, then it will be automatically set to the default. Currently the default is en_US.UFT-8 or en_US , depending on whether your originally (non-supported) locale was UTF-8 or not. Open the .bashrc on your local machine with your favourite editor and add the following lines: $ nano ~/.bashrc ... export LANGUAGE=\"en_US.UTF-8\" export LC_ALL=\"en_US.UTF-8\" export LC_CTYPE=\"en_US.UTF-8\" export LANG=\"en_US.UTF-8\" ... tip: vi To start entering text in vi: move to the place you want to start entering text with the arrow keys and type \"i\" to switch to insert mode. You can easily exit vi by entering: \" ESC :wq\" To exit vi without saving your changes, enter \" ESC :q!\" or alternatively (if you are not comfortable with the Linux editors), again on your local machine: $ echo \"export LANGUAGE=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile $ echo \"export LC_ALL=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile $ echo \"export LC_CTYPE=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile $ echo \"export LANG=\\\"en_US.UTF-8\\\"\" >> \u223c/.profile You can now log out, open a new terminal/shell on your local machine and reconnect to the , and you should not get these warnings anymore.", "title": "Connect"}, {"location": "intro-HPC/ch_connecting/#transfer-files-tofrom-the-ugent-hpc", "text": "Before you can do some work, you'll have to transfer the files you need from your desktop or department to the cluster . At the end of a job, you might want to transfer some files back. The preferred way to transfer files is by using an scp or sftp via the secure OpenSSH protocol. MacOS ships with an implementation of OpenSSH, so you don't need to install any third-party software to use it. Just open a terminal window and jump in!", "title": "Transfer Files to/from the UGent-HPC"}, {"location": "intro-HPC/ch_connecting/#using-scp", "text": "Secure copy or SCP is a tool (command) for securely transferring files between a local host (= your computer) and a remote host (the UGent- HPC ). It is based on the Secure Shell (SSH) protocol. The scp command is the equivalent of the cp (i.e., c o p y) command, but can copy files to or from remote machines. It's easier to copy files directly to $VSC_DATA and $VSC_SCRATCH if you have symlinks to them in your home directory. See the chapter titled \"Uploading/downloading/editing files\", section \"Symlinks for data/scratch\" in the intro to Linux for how to do this. Open an additional terminal window and check that you're working on your local machine. $ hostname <local-machine-name> If you're still using the terminal that is connected to the UGent- HPC , close the connection by typing \"exit\" in the terminal window. For example, we will copy the (local) file \" localfile.txt \" to your home directory on the UGent- HPC cluster . We first generate a small dummy \" localfile.txt \", which contains the word \"Hello\". Use your own VSC account, which is something like \"vsc20167\". Don't forget the colon ( : ) at the end: if you forget it, it will just create a file named vsc20167@login.hpc.ugent.be on your local filesystem. You can even specify where to save the file on the remote filesystem by putting a path after the colon. $ echo \"Hello\" > localfile.txt $ ls -l ... -rw-r--r-- 1 user staff 6 Sep 18 09:37 localfile.txt $ scp localfile.txt vsc20167@login.hpc.ugent.be localfile.txt 100% 6 0.0KB/s 00:00 Connect to the UGent- HPC via another terminal, print the working directory (to make sure you're in the home directory) and check whether the file has arrived: $ pwd /user/gent/201/vsc20167 $ ls -l total 1536 drwxrwxr-x 2 drwxrwxr-x 2 drwxrwxr-x 10 -rw-r--r-- 1 $ cat localfile.txt Hello The scp command can also be used to copy files from the cluster to your local machine. Let us copy the remote file \"intro- HPC -MacOS-Gent.pdf\" from your \"docs\" subdirectory on the cluster to your local computer. First, we will confirm that the file is indeed in the \"docs\" subdirectory. On the terminal on the , enter: $ cd ~/docs $ ls -l total 1536 -rw-r--r-- 1 vsc20167 Sep 11 09:53 intro-HPC-MacOS-Gent.pdf Now we will copy the file to the local machine. On the terminal on your own local computer, enter: $ scp vsc20167@login.hpc.ugent.be:./docs/intro-HPC-MacOS-Gent.pdf . intro-HPC-MacOS-Gent.pdf 100% 725KB 724.6KB/s 00:01 $ ls -l total 899 -rw-r--r-- 1 user staff 741995 Sep 18 09:53 -rw-r--r-- 1 user staff 6 Sep 18 09:37 localfile.txt The file has been copied from the HPC to your local computer. It's also possible to copy entire directories (and their contents) with the -r flag. For example, if we want to copy the local directory dataset to $VSC_SCRATCH , we can use the following command (assuming you've created the scratch symlink): $ scp -r dataset vsc20167@login.hpc.ugent.be:scratch If you don't use the -r option to copy a directory, you will run into the following error: $ scp -r dataset vsc20167@login.hpc.ugent.be:scratch dataset: not a regular file", "title": "Using scp"}, {"location": "intro-HPC/ch_connecting/#using-sftp", "text": "The SSH File Transfer Protocol (also Secure File Transfer Protocol , or SFTP ) is a network protocol that provides file access, file transfer and file management functionalities over any reliable data stream. It was designed as an extension of the Secure Shell protocol (SSH) version 2.0. This protocol assumes that it is run over a secure channel, such as SSH, that the server has already authenticated the client, and that the identity of the client user is available to the protocol. The sftp is an equivalent of the ftp command, with the difference that it uses the secure ssh protocol to connect to the clusters. One easy way of starting a sftp session is $ sftp vsc20167@login.hpc.ugent.be Typical and popular commands inside an sftp session are: cd ~/exmples/fibo Move to the examples/fibo subdirectory on the (i.e., the UGent- HPC remote machine) ls Get a list of the files in the current directory on the UGent- HPC . get fibo.py Copy the file \"fibo.py\" from the UGent- HPC get tutorial/ HPC .pdf Copy the file \" HPC .pdf\" from the UGent- HPC , which is in the \"tutorial\" subdirectory. lcd test Move to the \"test\" subdirectory on your local machine. lcd .. Move up one level in the local directory. lls Get local directory listing. put test.py Copy the local file test.py to the UGent- HPC . put test1.py test2.py Copy the local file test1.py to the and rename it to test2.py. bye Quit the sftp session mget *.cc Copy all the remote files with extension \".cc\" to the local directory. mput *.h Copy all the local files with extension \".h\" to the UGent- HPC .", "title": "Using sftp"}, {"location": "intro-HPC/ch_connecting/#fast-file-transfer-for-large-datasets", "text": "See the section on rsync in chapter 5 of the Linux intro manual .", "title": "Fast file transfer for large datasets"}, {"location": "intro-HPC/ch_easybuild/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Easybuild {#ch:easybuild}", "title": "Easybuild {#ch:easybuild}"}, {"location": "intro-HPC/ch_easybuild/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Easybuild {#ch:easybuild}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_fine_tuning_job_specifications/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Fine-tuning Job Specifications {#ch:fine-tuning-job-specifications}", "title": "Fine-tuning Job Specifications {#ch:fine-tuning-job-specifications}"}, {"location": "intro-HPC/ch_fine_tuning_job_specifications/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Fine-tuning Job Specifications {#ch:fine-tuning-job-specifications}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_gpu_gent/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # HPC-UGent GPU clusters {#ch:gpu_ugent}", "title": "HPC-UGent GPU clusters {#ch:gpu_ugent}"}, {"location": "intro-HPC/ch_gpu_gent/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # HPC-UGent GPU clusters {#ch:gpu_ugent}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_interactive_gent/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # HPC-UGent interactive and debug cluster {#ch:interactive_ugent}", "title": "HPC-UGent interactive and debug cluster {#ch:interactive_ugent}"}, {"location": "intro-HPC/ch_interactive_gent/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # HPC-UGent interactive and debug cluster {#ch:interactive_ugent}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_introduction/", "text": "Introduction to HPC # What is HPC ? # \" High Performance Computing \" ( HPC ) is computing on a \" Supercomputer \", a computer with at the frontline of contemporary processing capacity -- particularly speed of calculation and available memory. While the supercomputers in the early days (around 1970) used only a few processors, in the 1990s machines with thousands of processors began to appear and, by the end of the 20th century, massively parallel supercomputers with tens of thousands of \"off-the-shelf\" processors were the norm. A large number of dedicated processors are placed in close proximity to each other in a computer cluster . A computer cluster consists of a set of loosely or tightly connected computers that work together so that in many respects they can be viewed as a single system. The components of a cluster are usually connected to each other through fast local area networks (\"LAN\") with each node (computer used as a server) running its own instance of an operating system. Computer clusters emerged as a result of convergence of a number of computing trends including the availability of low cost microprocessors, high-speed networks, and software for high performance distributed computing. Compute clusters are usually deployed to improve performance and availability over that of a single computer, while typically being more cost-effective than single computers of comparable speed or availability. Supercomputers play an important role in the field of computational science, and are used for a wide range of computationally intensive tasks in various fields, including quantum mechanics, weather forecasting, climate research, oil and gas exploration, molecular modelling (computing the structures and properties of chemical compounds, biological macromolecules, polymers, and crystals), and physical simulations (such as simulations of the early moments of the universe, airplane and spacecraft aerodynamics, the detonation of nuclear weapons, and nuclear fusion). 1 What is the UGent- HPC ? # The UGent- HPC is a collection of computers with AMD and/or Intel CPUs, running a Linux operating system, shaped like pizza boxes and stored above and next to each other in racks, interconnected with copper and fiber cables. Their number crunching power is (presently) measured in hundreds of billions of floating point operations (gigaflops) and even in teraflops. The UGent- HPC relies on parallel-processing technology to offer University of Gentresearchers an extremely fast solution for all their data processing needs. The UGent- HPC currently consists of: a set of different compute clusters. For an up to date list of all clusters and their hardware, see https://vscdocumentation.readthedocs.io/en/latest/gent/tier2_hardware.html . Job management and job scheduling are performed by Slurm with a Torque frontend. We advise users to adhere to Torque commands mentioned in this document. What the HPC infrastucture is not # The HPC infrastructure is not a magic computer that automatically: runs your PC-applications much faster for bigger problems; develops your applications; solves your bugs; does your thinking; ... allows you to play games even faster. The UGent- HPC does not replace your desktop computer. Is the UGent- HPC a solution for my computational needs? # Batch or interactive mode? # Typically, the strength of a supercomputer comes from its ability to run a huge number of programs (i.e., executables) in parallel without any user interaction in real time. This is what is called \"running in batch mode\". It is also possible to run programs at the UGent- HPC , which require user interaction. (pushing buttons, entering input data, etc.). Although technically possible, the use of the UGent- HPC might not always be the best and smartest option to run those interactive programs. Each time some user interaction is needed, the computer will wait for user input. The available computer resources (CPU, storage, network, etc.) might not be optimally used in those cases. A more in-depth analysis with the UGent- HPC staff can unveil whether the UGent- HPC is the desired solution to run interactive programs. Interactive mode is typically only useful for creating quick visualisations of your data without having to copy your data to your desktop and back. What are cores, processors and nodes? # In this manual, the terms core , processor and node will be frequently used, so it's useful to understand what they are. Modern servers, also referred to as (worker)nodes in the context of HPC , include one or more sockets, each housing a multi- core processor (next to memory, disk(s), network cards, ...). A modern processor consists of multiple CPUs or cores that are used to execute computations . Parallel or sequential programs? # Parallel programs # Parallel computing is a form of computation in which many calculations are carried out simultaneously. They are based on the principle that large problems can often be divided into smaller ones, which are then solved concurrently (\"in parallel\"). Parallel computers can be roughly classified according to the level at which the hardware supports parallelism, with multicore computers having multiple processing elements within a single machine, while clusters use multiple computers to work on the same task. Parallel computing has become the dominant computer architecture, mainly in the form of multicore processors. The two parallel programming paradigms most used in HPC are: OpenMP for shared memory systems (multithreading): on multiple cores of a single node MPI for distributed memory systems (multiprocessing): on multiple nodes Parallel programs are more difficult to write than sequential ones, because concurrency introduces several new classes of potential software bugs, of which race conditions are the most common. Communication and synchronisation between the different subtasks are typically some of the greatest obstacles to getting good parallel program performance. Sequential programs # Sequential software does not do calculations in parallel, i.e., it only uses one single core of a single workernode . It does not become faster by just throwing in more cores at it : it can only use one core . It is perfectly possible to also run purely sequential programs on the UGent- HPC . Running your sequential programs on the most modern and fastest computers in the UGent- HPC can save you a lot of time. But it also might be possible to run multiple instances of your program (e.g., with different input parameters) on the UGent- HPC , in order to solve one overall problem (e.g., to perform a parameter sweep). This is another form of running your sequential programs in parallel. What programming languages can I use? # You can use any programming language, any software package and any library provided it has a version that runs on Linux, specifically, on the version of Linux that is installed on the compute nodes, CentOS Linux release 7.8.2003 (Core). For the most common programming languages , a compiler is available on CentOS Linux release 7.8.2003 (Core). Supported and common programming languages on the UGent- HPC are C/C++, FORTRAN, Java, Perl, Python, MATLAB, R, etc. Supported and commonly used compilers are GCC and Intel. Additional software can be installed \" on demand \". Please contact the UGent- HPC staff to see whether the UGent- HPC can handle your specific requirements. What operating systems can I use? # All nodes in the UGent- HPC cluster run under CentOS Linux release 7.8.2003 (Core), which is a specific version of RedHat Enterprise Linux. This means that all programs (executables) should be compiled for CentOS Linux release 7.8.2003 (Core). Users can connect from any computer in the University of Gent network to the UGent- HPC , regardless of the Operating System that they are using on their personal computer. Users can use any of the common Operating Systems (such as Windows, macOS or any version of Linux/Unix/BSD) and run and control their programs on the UGent- HPC . A user does not need to have prior knowledge about Linux; all of the required knowledge is explained in this tutorial. What does a typical workflow look like? # A typical workflow looks like: Connect to the login nodes with SSH (see First Time connection to the HPC infrastructure ) Transfer your files to the cluster (see Transfer Files to/from the HPC ) Optional: compile your code and test it (for compiling, see Compiling and testing your software on the HPC ) Create a job script and submit your job (see Running batch jobs ) Get some coffee and be patient: Your job gets into the queue Your job gets executed Your job finishes Study the results generated by your jobs, either on the cluster or after downloading them locally. What is the next step? # When you think that the UGent- HPC is a useful tool to support your computational needs, we encourage you to acquire a VSC-account (as explained in Getting a HPC Account ), read Connecting to the HPC infrastructure , \"Setting up the environment\", and explore chapters Running interactive jobs to Fine-tuning Job Specifications which will help you to transfer and run your programs on the UGent- HPC cluster . Do not hesitate to contact the UGent- HPC staff for any help. Wikipedia: http://en.wikipedia.org/wiki/Supercomputer \u21a9", "title": "Introduction"}, {"location": "intro-HPC/ch_introduction/#introduction-to-hpc", "text": "", "title": "Introduction to HPC"}, {"location": "intro-HPC/ch_introduction/#what-is-hpc", "text": "\" High Performance Computing \" ( HPC ) is computing on a \" Supercomputer \", a computer with at the frontline of contemporary processing capacity -- particularly speed of calculation and available memory. While the supercomputers in the early days (around 1970) used only a few processors, in the 1990s machines with thousands of processors began to appear and, by the end of the 20th century, massively parallel supercomputers with tens of thousands of \"off-the-shelf\" processors were the norm. A large number of dedicated processors are placed in close proximity to each other in a computer cluster . A computer cluster consists of a set of loosely or tightly connected computers that work together so that in many respects they can be viewed as a single system. The components of a cluster are usually connected to each other through fast local area networks (\"LAN\") with each node (computer used as a server) running its own instance of an operating system. Computer clusters emerged as a result of convergence of a number of computing trends including the availability of low cost microprocessors, high-speed networks, and software for high performance distributed computing. Compute clusters are usually deployed to improve performance and availability over that of a single computer, while typically being more cost-effective than single computers of comparable speed or availability. Supercomputers play an important role in the field of computational science, and are used for a wide range of computationally intensive tasks in various fields, including quantum mechanics, weather forecasting, climate research, oil and gas exploration, molecular modelling (computing the structures and properties of chemical compounds, biological macromolecules, polymers, and crystals), and physical simulations (such as simulations of the early moments of the universe, airplane and spacecraft aerodynamics, the detonation of nuclear weapons, and nuclear fusion). 1", "title": "What is HPC?"}, {"location": "intro-HPC/ch_introduction/#what-is-the-ugent-hpc", "text": "The UGent- HPC is a collection of computers with AMD and/or Intel CPUs, running a Linux operating system, shaped like pizza boxes and stored above and next to each other in racks, interconnected with copper and fiber cables. Their number crunching power is (presently) measured in hundreds of billions of floating point operations (gigaflops) and even in teraflops. The UGent- HPC relies on parallel-processing technology to offer University of Gentresearchers an extremely fast solution for all their data processing needs. The UGent- HPC currently consists of: a set of different compute clusters. For an up to date list of all clusters and their hardware, see https://vscdocumentation.readthedocs.io/en/latest/gent/tier2_hardware.html . Job management and job scheduling are performed by Slurm with a Torque frontend. We advise users to adhere to Torque commands mentioned in this document.", "title": "What is the UGent-HPC?"}, {"location": "intro-HPC/ch_introduction/#what-the-hpc-infrastucture-is-not", "text": "The HPC infrastructure is not a magic computer that automatically: runs your PC-applications much faster for bigger problems; develops your applications; solves your bugs; does your thinking; ... allows you to play games even faster. The UGent- HPC does not replace your desktop computer.", "title": "What the HPC infrastucture is not"}, {"location": "intro-HPC/ch_introduction/#is-the-ugent-hpc-a-solution-for-my-computational-needs", "text": "", "title": "Is the UGent-HPC a solution for my computational needs?"}, {"location": "intro-HPC/ch_introduction/#batch-or-interactive-mode", "text": "Typically, the strength of a supercomputer comes from its ability to run a huge number of programs (i.e., executables) in parallel without any user interaction in real time. This is what is called \"running in batch mode\". It is also possible to run programs at the UGent- HPC , which require user interaction. (pushing buttons, entering input data, etc.). Although technically possible, the use of the UGent- HPC might not always be the best and smartest option to run those interactive programs. Each time some user interaction is needed, the computer will wait for user input. The available computer resources (CPU, storage, network, etc.) might not be optimally used in those cases. A more in-depth analysis with the UGent- HPC staff can unveil whether the UGent- HPC is the desired solution to run interactive programs. Interactive mode is typically only useful for creating quick visualisations of your data without having to copy your data to your desktop and back.", "title": "Batch or interactive mode?"}, {"location": "intro-HPC/ch_introduction/#what-are-cores-processors-and-nodes", "text": "In this manual, the terms core , processor and node will be frequently used, so it's useful to understand what they are. Modern servers, also referred to as (worker)nodes in the context of HPC , include one or more sockets, each housing a multi- core processor (next to memory, disk(s), network cards, ...). A modern processor consists of multiple CPUs or cores that are used to execute computations .", "title": "What are cores, processors and nodes?"}, {"location": "intro-HPC/ch_introduction/#parallel-or-sequential-programs", "text": "", "title": "Parallel or sequential programs?"}, {"location": "intro-HPC/ch_introduction/#what-programming-languages-can-i-use", "text": "You can use any programming language, any software package and any library provided it has a version that runs on Linux, specifically, on the version of Linux that is installed on the compute nodes, CentOS Linux release 7.8.2003 (Core). For the most common programming languages , a compiler is available on CentOS Linux release 7.8.2003 (Core). Supported and common programming languages on the UGent- HPC are C/C++, FORTRAN, Java, Perl, Python, MATLAB, R, etc. Supported and commonly used compilers are GCC and Intel. Additional software can be installed \" on demand \". Please contact the UGent- HPC staff to see whether the UGent- HPC can handle your specific requirements.", "title": "What programming languages can I use?"}, {"location": "intro-HPC/ch_introduction/#what-operating-systems-can-i-use", "text": "All nodes in the UGent- HPC cluster run under CentOS Linux release 7.8.2003 (Core), which is a specific version of RedHat Enterprise Linux. This means that all programs (executables) should be compiled for CentOS Linux release 7.8.2003 (Core). Users can connect from any computer in the University of Gent network to the UGent- HPC , regardless of the Operating System that they are using on their personal computer. Users can use any of the common Operating Systems (such as Windows, macOS or any version of Linux/Unix/BSD) and run and control their programs on the UGent- HPC . A user does not need to have prior knowledge about Linux; all of the required knowledge is explained in this tutorial.", "title": "What operating systems can I use?"}, {"location": "intro-HPC/ch_introduction/#what-does-a-typical-workflow-look-like", "text": "A typical workflow looks like: Connect to the login nodes with SSH (see First Time connection to the HPC infrastructure ) Transfer your files to the cluster (see Transfer Files to/from the HPC ) Optional: compile your code and test it (for compiling, see Compiling and testing your software on the HPC ) Create a job script and submit your job (see Running batch jobs ) Get some coffee and be patient: Your job gets into the queue Your job gets executed Your job finishes Study the results generated by your jobs, either on the cluster or after downloading them locally.", "title": "What does a typical workflow look like?"}, {"location": "intro-HPC/ch_introduction/#what-is-the-next-step", "text": "When you think that the UGent- HPC is a useful tool to support your computational needs, we encourage you to acquire a VSC-account (as explained in Getting a HPC Account ), read Connecting to the HPC infrastructure , \"Setting up the environment\", and explore chapters Running interactive jobs to Fine-tuning Job Specifications which will help you to transfer and run your programs on the UGent- HPC cluster . Do not hesitate to contact the UGent- HPC staff for any help. Wikipedia: http://en.wikipedia.org/wiki/Supercomputer \u21a9", "title": "What is the next step?"}, {"location": "intro-HPC/ch_jobscript_examples/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Job script examples {#ch:jobscript-examples}", "title": "Job script examples {#ch:jobscript-examples}"}, {"location": "intro-HPC/ch_jobscript_examples/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Job script examples {#ch:jobscript-examples}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_multi_core_jobs/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Multi core jobs/Parallel Computing {#ch:multi-core-jobs-parallel-computing}", "title": "Multi core jobs/Parallel Computing {#ch:multi-core-jobs-parallel-computing}"}, {"location": "intro-HPC/ch_multi_core_jobs/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Multi core jobs/Parallel Computing {#ch:multi-core-jobs-parallel-computing}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_multi_job_submission/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Multi-job submission {#ch:multi-job-submission}", "title": "Multi-job submission {#ch:multi-job-submission}"}, {"location": "intro-HPC/ch_multi_job_submission/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Multi-job submission {#ch:multi-job-submission}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_mympirun/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Mympirun {#ch:mympirun}", "title": "Mympirun {#ch:mympirun}"}, {"location": "intro-HPC/ch_mympirun/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Mympirun {#ch:mympirun}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_openFOAM/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # OpenFOAM {#ch:openfoam}", "title": "OpenFOAM {#ch:openfoam}"}, {"location": "intro-HPC/ch_openFOAM/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # OpenFOAM {#ch:openfoam}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_program_examples/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Program examples {#ch:program-examples}", "title": "Program examples {#ch:program-examples}"}, {"location": "intro-HPC/ch_program_examples/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Program examples {#ch:program-examples}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_quick_reference_guide/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # HPC Quick Reference Guide {#ch:quick-reference-guide}", "title": "HPC Quick Reference Guide {#ch:quick-reference-guide}"}, {"location": "intro-HPC/ch_quick_reference_guide/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # HPC Quick Reference Guide {#ch:quick-reference-guide}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_running_batch_jobs/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Running batch jobs {#ch:running-batch-jobs}", "title": "Running batch jobs {#ch:running-batch-jobs}"}, {"location": "intro-HPC/ch_running_batch_jobs/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Running batch jobs {#ch:running-batch-jobs}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_running_interactive_jobs/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Running interactive jobs {#ch:running-interactive-jobs}", "title": "Running interactive jobs {#ch:running-interactive-jobs}"}, {"location": "intro-HPC/ch_running_interactive_jobs/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Running interactive jobs {#ch:running-interactive-jobs}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_running_jobs_with_input_output_data/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Running jobs with input/output data {#ch:running-jobs-with-input-output-data}", "title": "Running jobs with input/output data {#ch:running-jobs-with-input-output-data}"}, {"location": "intro-HPC/ch_running_jobs_with_input_output_data/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Running jobs with input/output data {#ch:running-jobs-with-input-output-data}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_scoop/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # SCOOP {#ch:scoop}", "title": "SCOOP {#ch:scoop}"}, {"location": "intro-HPC/ch_scoop/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # SCOOP {#ch:scoop}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_singularity/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Singularity {#ch:singularity}", "title": "Singularity {#ch:singularity}"}, {"location": "intro-HPC/ch_singularity/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Singularity {#ch:singularity}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_torque_options/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # TORQUE options {#ch:torque-options}", "title": "TORQUE options {#ch:torque-options}"}, {"location": "intro-HPC/ch_torque_options/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # TORQUE options {#ch:torque-options}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_troubleshooting/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Troubleshooting {#ch:troubleshooting}", "title": "Troubleshooting {#ch:troubleshooting}"}, {"location": "intro-HPC/ch_troubleshooting/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Troubleshooting {#ch:troubleshooting}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_useful_linux_commands/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Useful Linux Commands {#ch:useful-linux-commands}", "title": "Useful Linux Commands {#ch:useful-linux-commands}"}, {"location": "intro-HPC/ch_useful_linux_commands/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Useful Linux Commands {#ch:useful-linux-commands}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_web_portal/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Using the HPC-UGent web portal {#ch:web_portal}", "title": "Using the HPC-UGent web portal {#ch:web_portal}"}, {"location": "intro-HPC/ch_web_portal/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Using the HPC-UGent web portal {#ch:web_portal}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_x2go/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # Graphical applications with X2Go {#ch:x2go}", "title": "Graphical applications with X2Go {#ch:x2go}"}, {"location": "intro-HPC/ch_x2go/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # Graphical applications with X2Go {#ch:x2go}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/ch_xdmod/", "text": "Macro Syntax Error # Line 1 in Markdown file: Missing end of comment tag # XDMoD portal {#ch:xdmod}", "title": "XDMoD portal {#ch:xdmod}"}, {"location": "intro-HPC/ch_xdmod/#macro-syntax-error", "text": "Line 1 in Markdown file: Missing end of comment tag # XDMoD portal {#ch:xdmod}", "title": "Macro Syntax Error"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/", "text": "This comes before, and it is a specific content for location Gent - MacOS. Watch end of this page too. Linux Getting an HPC Account # Getting ready to request an account # All users of Gent University Association (GUHA) can request an account on the UGent- HPC , which is part of the Flemish Supercomputing Centre (VSC). See HPC policies for more information on who is entitled to an account. The VSC, abbreviation of Flemish Supercomputer Centre, is a virtual supercomputer centre. It is a partnership between the five Flemish associations: the Association KU Leuven, Ghent University Association, Brussels University Association, Antwerp University Association and the University Colleges-Limburg. The VSC is funded by the Flemish Government. The UGent- HPC clusters use public/private key pairs for user authentication (rather than passwords). Technically, the private key is stored on your local computer and always stays there; the public key is stored on the UGent- HPC . Access to the UGent- HPC is granted to anyone who can prove to have access to the corresponding private key on his local computer. How do SSH keys work? # an SSH public/private key pair can be seen as a lock and a key the SSH public key is equivalent with a lock : you give it to the VSC and they put it on the door that gives access to your account. the SSH private key is like a physical key : you don't hand it out to other people. anyone who has the key (and the optional password) can unlock the door and log in to the account. the door to your VSC account is special: it can have multiple locks (SSH public keys) attached to it, and you only need to open one lock with the corresponding key (SSH private key) to open the door (log in to the account). Since all VSC clusters use Linux as their main operating system, you will need to get acquainted with using the command-line interface and using the terminal. To open a Terminal window in macOS, open the Finder and choose >> Applications > Utilities > Terminal Before requesting an account, you need to generate a pair of ssh keys. One popular way to do this on MacOS is using the OpenSSH client included with MacOS, which you can then also use to log on to the clusters. Test OpenSSH # Secure Shell (ssh) is a cryptographic network protocol for secure data communication, remote command-line login, remote command execution, and other secure network services between two networked computers. In short, ssh provides a secure connection between 2 computers via insecure channels (Network, Internet, telephone lines, ...). \"Secure\" means that: the User is authenticated to the System; and the System is authenticated to the User; and all data is encrypted during transfer. OpenSSH is a FREE implementation of the SSH connectivity protocol. MacOS comes with its own implementation of OpenSSH, so you don't need to install any third-party software to use it. Just open a terminal window and jump in! On all popular Linux distributions, the OpenSSH software is readily available, and most often installed by default. You can check whether the OpenSSH software is installed by opening a terminal and typing: $ ssh -V OpenSSH_7.4p1, OpenSSL 1.0.2k-fips 26 Jan 2017 To access the clusters and transfer your files, you will use the following commands: ssh-keygen: to generate the ssh keysgenerate a public ssh: to open a shell on a remote machine; sftp: a secure equivalent of ftp; scp: a secure equivalent of the remote copy command rcp. Generate a public/private key pair with OpenSSH # A key pair might already be present in the default location inside your home directory. Therefore, we first check if a key is available with the \"list short\" (\"ls\") command: $ ls ~/.ssh If a key-pair is already available, you would normally get: authorized_keys id_rsa id_rsa.pub known_hosts Otherwise, the command will show: ls: .ssh: No such file or directory You can recognise a public/private key pair when a pair of files has the same name except for the extension \".pub\" added to one of them. In this particular case, the private key is \"id_rsa\" and public key is \"id_rsa.pub\". You may have multiple keys (not necessarily in the directory \"\u223c/.ssh\") if you or your operating system requires this. Be aware that your existing key pair might be too short, or not the right type. You will need to generate a new key pair, when: you don't have a key pair yet you forgot the passphrase protecting your private key or your private key was compromised your key pair is too short or not the right type For extra security, the private key itself can be encrypted using a \"passphrase\", to prevent anyone from using your private key even when they manage to copy it. You have to \"unlock\" the private key by typing the passphrase. Be sure to never give away your private key, it is private and should stay private. You should not even copy it to one of your other machines, instead, you should create a new public/private key pair for each machine. $ ssh-keygen -t rsa -b 4096 Generating public/private rsa key pair. Enter file in which to save the key (/home/user/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/user/.ssh/id_rsa. Your public key has been saved in /home/user/.ssh/id_rsa.pub. This will ask you for a file name to store the private and public key, and a passphrase to protect your private key. It needs to be emphasised that you really should choose the passphrase wisely! The system will ask you for it every time you want to use the private key that is every time you want to access the cluster or transfer your files. Without your key pair, you won't be able to apply for a personal VSC account. Using an SSH agent (optional) # Most recent Unix derivatives include by default an SSH agent to keep and manage the user SSH keys. If you use one of these derivatives you must include the new keys into the SSH manager keyring to be able to connect to the HPC cluster . If not, SSH client will display an error message (see Connecting ) similar to this: Agent admitted failure to sign using the key. Permission denied (publickey,gssapi-keyex,gssapi-with-mic). This could be fixed using the ssh-add command. You can include the new private keys' identities in your keyring with: $ ssh-add Tip Without extra options ssh-add adds any key located at $HOME/.ssh directory, but you can specify the private key location path as argument, as example: ssh-add /path/to/my/id_rsa . Check that your key is available from the keyring with: $ ssh-add -l After these changes the key agent will keep your SSH key to connect to the clusters as usual. Tip You should execute ssh-add command again if you generate a new SSH key. Applying for the account # Visit https://account.vscentrum.be/ You will be redirected to our WAYF (Where Are You From) service where you have to select your \"Home Organisation\". Select \"Universiteit Gent\" in the dropdown box and optionally select \"Save my preference\" and \"permanently\". Click Confirm You will now be taken to the authentication page of your institute. You will now have to log in with CAS using your UGent account. You either have a login name of maximum 8 characters, or a (non-UGent) email address if you are an external user. In case of problems with your UGent password, please visit: https://password.ugent.be/ . After logging in, you may be requested to share your information. Click \"Yes, continue\". After you log in using your University of Gent login and password, you will be asked to upload the file that contains your public key, i.e., the file \"id_rsa.pub\" which you have generated earlier. Make sure that your public key is actually accepted for upload, beacuse if it is in a wrong format, wrong type or too short, then it will be refused. This file has been stored in the directory \" ~/.ssh/ \". Tip As \".ssh\" is an invisible directory, the Finder will not show it by default. The easiest way to access the folder, is by pressing Cmd + Shift + G , which will allow you to enter the name of a directory, which you would like to open in Finder. Here, type \"~/.ssh\" and press enter. After you have uploaded your public key you will receive an e-mail with a link to confirm your e-mail address. After confirming your e-mail address the VSC staff will review and if applicable approve your account. Welcome e-mail # Within one day, you should receive a Welcome e-mail with your VSC account details. Dear (Username), Your VSC-account has been approved by an administrator. Your vsc-username is vsc20167 Your account should be fully active within one hour. To check or update your account information please visit https://account.vscentrum.be/ For further info please visit https://www.vscentrum.be/user-portal Kind regards, -- The VSC administrators Now, you can start using the UGent- HPC . You can always look up your VSC id later by visiting https://account.vscentrum.be . Adding multiple SSH public keys (optional) # In case you are connecting from different computers to the login nodes, it is advised to use separate SSH public keys to do so. You should follow these steps. Create a new public/private SSH key pair from the new computer. Repeat the process described in section Generate a public/private key pair with OpenSSH . Go to https://account.vscentrum.be/django/account/edit Upload the new SSH public key using the Add public key section. Make sure that your public key is actually saved, because a public key will be refused if it is too short, wrong type, or in a wrong format. (optional) If you lost your key, you can delete the old key on the same page. You should keep at least one valid public SSH key in your account. Take into account that it will take some time before the new SSH public key is active in your account on the system; waiting for 15-30 minutes should be sufficient. Computation Workflow on the UGent- HPC # A typical Computation workflow will be: Connect to the UGent- HPC Transfer your files to the UGent- HPC Compile your code and test it Create a job script Submit your job Wait while your job gets into the queue your job gets executed your job finishes Move your results We'll take you through the different tasks one by one in the following chapters. There you can see usage of the site specific macro. Ranger says \"Yeee Haaa\". Now you know how to extend the existing page. If you want to change something inside another document you must indeed copy this document and create your own edited version.", "title": "Ch account"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#getting-an-hpc-account", "text": "", "title": "Getting an HPC Account"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#getting-ready-to-request-an-account", "text": "All users of Gent University Association (GUHA) can request an account on the UGent- HPC , which is part of the Flemish Supercomputing Centre (VSC). See HPC policies for more information on who is entitled to an account. The VSC, abbreviation of Flemish Supercomputer Centre, is a virtual supercomputer centre. It is a partnership between the five Flemish associations: the Association KU Leuven, Ghent University Association, Brussels University Association, Antwerp University Association and the University Colleges-Limburg. The VSC is funded by the Flemish Government. The UGent- HPC clusters use public/private key pairs for user authentication (rather than passwords). Technically, the private key is stored on your local computer and always stays there; the public key is stored on the UGent- HPC . Access to the UGent- HPC is granted to anyone who can prove to have access to the corresponding private key on his local computer.", "title": "Getting ready to request an account"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#how-do-ssh-keys-work", "text": "an SSH public/private key pair can be seen as a lock and a key the SSH public key is equivalent with a lock : you give it to the VSC and they put it on the door that gives access to your account. the SSH private key is like a physical key : you don't hand it out to other people. anyone who has the key (and the optional password) can unlock the door and log in to the account. the door to your VSC account is special: it can have multiple locks (SSH public keys) attached to it, and you only need to open one lock with the corresponding key (SSH private key) to open the door (log in to the account). Since all VSC clusters use Linux as their main operating system, you will need to get acquainted with using the command-line interface and using the terminal. To open a Terminal window in macOS, open the Finder and choose >> Applications > Utilities > Terminal Before requesting an account, you need to generate a pair of ssh keys. One popular way to do this on MacOS is using the OpenSSH client included with MacOS, which you can then also use to log on to the clusters.", "title": "How do SSH keys work?"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#test-openssh", "text": "Secure Shell (ssh) is a cryptographic network protocol for secure data communication, remote command-line login, remote command execution, and other secure network services between two networked computers. In short, ssh provides a secure connection between 2 computers via insecure channels (Network, Internet, telephone lines, ...). \"Secure\" means that: the User is authenticated to the System; and the System is authenticated to the User; and all data is encrypted during transfer. OpenSSH is a FREE implementation of the SSH connectivity protocol. MacOS comes with its own implementation of OpenSSH, so you don't need to install any third-party software to use it. Just open a terminal window and jump in! On all popular Linux distributions, the OpenSSH software is readily available, and most often installed by default. You can check whether the OpenSSH software is installed by opening a terminal and typing: $ ssh -V OpenSSH_7.4p1, OpenSSL 1.0.2k-fips 26 Jan 2017 To access the clusters and transfer your files, you will use the following commands: ssh-keygen: to generate the ssh keysgenerate a public ssh: to open a shell on a remote machine; sftp: a secure equivalent of ftp; scp: a secure equivalent of the remote copy command rcp.", "title": "Test OpenSSH"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#generate-a-publicprivate-key-pair-with-openssh", "text": "A key pair might already be present in the default location inside your home directory. Therefore, we first check if a key is available with the \"list short\" (\"ls\") command: $ ls ~/.ssh If a key-pair is already available, you would normally get: authorized_keys id_rsa id_rsa.pub known_hosts Otherwise, the command will show: ls: .ssh: No such file or directory You can recognise a public/private key pair when a pair of files has the same name except for the extension \".pub\" added to one of them. In this particular case, the private key is \"id_rsa\" and public key is \"id_rsa.pub\". You may have multiple keys (not necessarily in the directory \"\u223c/.ssh\") if you or your operating system requires this. Be aware that your existing key pair might be too short, or not the right type. You will need to generate a new key pair, when: you don't have a key pair yet you forgot the passphrase protecting your private key or your private key was compromised your key pair is too short or not the right type For extra security, the private key itself can be encrypted using a \"passphrase\", to prevent anyone from using your private key even when they manage to copy it. You have to \"unlock\" the private key by typing the passphrase. Be sure to never give away your private key, it is private and should stay private. You should not even copy it to one of your other machines, instead, you should create a new public/private key pair for each machine. $ ssh-keygen -t rsa -b 4096 Generating public/private rsa key pair. Enter file in which to save the key (/home/user/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/user/.ssh/id_rsa. Your public key has been saved in /home/user/.ssh/id_rsa.pub. This will ask you for a file name to store the private and public key, and a passphrase to protect your private key. It needs to be emphasised that you really should choose the passphrase wisely! The system will ask you for it every time you want to use the private key that is every time you want to access the cluster or transfer your files. Without your key pair, you won't be able to apply for a personal VSC account.", "title": "Generate a public/private key pair with OpenSSH"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#using-an-ssh-agent-optional", "text": "Most recent Unix derivatives include by default an SSH agent to keep and manage the user SSH keys. If you use one of these derivatives you must include the new keys into the SSH manager keyring to be able to connect to the HPC cluster . If not, SSH client will display an error message (see Connecting ) similar to this: Agent admitted failure to sign using the key. Permission denied (publickey,gssapi-keyex,gssapi-with-mic). This could be fixed using the ssh-add command. You can include the new private keys' identities in your keyring with: $ ssh-add Tip Without extra options ssh-add adds any key located at $HOME/.ssh directory, but you can specify the private key location path as argument, as example: ssh-add /path/to/my/id_rsa . Check that your key is available from the keyring with: $ ssh-add -l After these changes the key agent will keep your SSH key to connect to the clusters as usual. Tip You should execute ssh-add command again if you generate a new SSH key.", "title": "Using an SSH agent (optional)"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#applying-for-the-account", "text": "Visit https://account.vscentrum.be/ You will be redirected to our WAYF (Where Are You From) service where you have to select your \"Home Organisation\". Select \"Universiteit Gent\" in the dropdown box and optionally select \"Save my preference\" and \"permanently\". Click Confirm You will now be taken to the authentication page of your institute. You will now have to log in with CAS using your UGent account. You either have a login name of maximum 8 characters, or a (non-UGent) email address if you are an external user. In case of problems with your UGent password, please visit: https://password.ugent.be/ . After logging in, you may be requested to share your information. Click \"Yes, continue\". After you log in using your University of Gent login and password, you will be asked to upload the file that contains your public key, i.e., the file \"id_rsa.pub\" which you have generated earlier. Make sure that your public key is actually accepted for upload, beacuse if it is in a wrong format, wrong type or too short, then it will be refused. This file has been stored in the directory \" ~/.ssh/ \". Tip As \".ssh\" is an invisible directory, the Finder will not show it by default. The easiest way to access the folder, is by pressing Cmd + Shift + G , which will allow you to enter the name of a directory, which you would like to open in Finder. Here, type \"~/.ssh\" and press enter. After you have uploaded your public key you will receive an e-mail with a link to confirm your e-mail address. After confirming your e-mail address the VSC staff will review and if applicable approve your account.", "title": "Applying for the account"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#welcome-e-mail", "text": "Within one day, you should receive a Welcome e-mail with your VSC account details. Dear (Username), Your VSC-account has been approved by an administrator. Your vsc-username is vsc20167 Your account should be fully active within one hour. To check or update your account information please visit https://account.vscentrum.be/ For further info please visit https://www.vscentrum.be/user-portal Kind regards, -- The VSC administrators Now, you can start using the UGent- HPC . You can always look up your VSC id later by visiting https://account.vscentrum.be .", "title": "Welcome e-mail"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#adding-multiple-ssh-public-keys-optional", "text": "In case you are connecting from different computers to the login nodes, it is advised to use separate SSH public keys to do so. You should follow these steps. Create a new public/private SSH key pair from the new computer. Repeat the process described in section Generate a public/private key pair with OpenSSH . Go to https://account.vscentrum.be/django/account/edit Upload the new SSH public key using the Add public key section. Make sure that your public key is actually saved, because a public key will be refused if it is too short, wrong type, or in a wrong format. (optional) If you lost your key, you can delete the old key on the same page. You should keep at least one valid public SSH key in your account. Take into account that it will take some time before the new SSH public key is active in your account on the system; waiting for 15-30 minutes should be sufficient.", "title": "Adding multiple SSH public keys (optional)"}, {"location": "intro-HPC/Antwerpen/Linux/intro-HPC/ch_account/#computation-workflow-on-the-ugent-hpc", "text": "A typical Computation workflow will be: Connect to the UGent- HPC Transfer your files to the UGent- HPC Compile your code and test it Create a job script Submit your job Wait while your job gets into the queue your job gets executed your job finishes Move your results We'll take you through the different tasks one by one in the following chapters. There you can see usage of the site specific macro. Ranger says \"Yeee Haaa\". Now you know how to extend the existing page. If you want to change something inside another document you must indeed copy this document and create your own edited version.", "title": "Computation Workflow on the UGent-HPC"}, {"location": "macros/LinuxManualURL/", "text": "", "title": "LinuxManualURL"}, {"location": "macros/firsttimeconnection/", "text": "", "title": "Firsttimeconnection"}, {"location": "macros/sshedfingerprintnote/", "text": "", "title": "Sshedfingerprintnote"}, {"location": "macros/Antwerpen/Linux/antLin/", "text": "", "title": "antLin"}]}